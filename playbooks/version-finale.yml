---
- name: Full Deployment Playbook
  hosts: all
  become: yes
  tasks:
    # Mettre à jour les paquets du système
    - name: Mettre à jour les paquets sur CentOS
      yum:
        name: "*"
        state: latest
      become: yes
      when: ansible_os_family == "RedHat"

    # Installer Python
    - name: Installer Python sur Ubuntu
      raw: |
        apt-get update -y
        apt-get install -y python3
      when: ansible_os_family == "Debian"

    - name: Installer Python sur CentOS
      raw: |
        yum install -y python3
      when: ansible_os_family == "RedHat"

    # Installer Git
    - name: Installer Git sur Ubuntu
      apt:
        name: git
        state: present
      when: ansible_os_family == "Debian"

    - name: Installer Git sur CentOS
      yum:
        name: git
        state: present
      when: ansible_os_family == "RedHat"

    # Installer Curl
    - name: Installer Curl sur Ubuntu
      apt:
        name: curl
        state: present
      when: ansible_os_family == "Debian"

    - name: Installer Curl sur CentOS
      yum:
        name: curl
        state: present
      when: ansible_os_family == "RedHat"

    # Installer Docker
    - name: Installer Docker
      shell: |
        curl -fsSL https://get.docker.com | sh
        systemctl start docker
        systemctl enable docker

    # Installer UFW ou Firewalld
    - name: Installer UFW sur Debian/Ubuntu
      apt:
        name:
          - ufw
        state: present
      when: ansible_os_family == "Debian"

    - name: Activer UFW
      ufw:
        state: enabled
      when: ansible_os_family == "Debian"

    - name: Installer Firewalld sur CentOS/RedHat
      yum:
        name: firewalld
        state: present
      when: ansible_os_family == "RedHat"

    - name: Démarrer et activer Firewalld
      service:
        name: firewalld
        state: started
        enabled: yes
      when: ansible_os_family == "RedHat"

    # Installer et configurer Nginx
    - name: Installer Nginx sur Ubuntu
      apt:
        name: nginx
        state: present
      when: ansible_os_family == "Debian"

    - name: Installer Nginx sur CentOS
      yum:
        name: nginx
        state: present
      when: ansible_os_family == "RedHat"

    - name: Activer et démarrer Nginx
      service:
        name: nginx
        state: started
        enabled: yes

    # Configurer Nginx sur VPS (CentOS)
    - name: Configurer Nginx pour JuiceShop (CentOS)
      blockinfile:
        path: /etc/nginx/conf.d/juice.conf
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        block: |
          server {
              listen 80;
              server_name {{ inventory_hostname }};

              location / {
                  proxy_pass http://127.0.0.1:3000;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
      when: ansible_os_family == "RedHat"

    - name: Vérifier la configuration Nginx
      command: nginx -t

    - name: Redémarrer Nginx
      service:
        name: nginx
        state: restarted

    # Cloner les projets. Modifier les liens github si ils sont plus dispo
    - name: Télécharger le projet Grafana sur le Githbri pour le VPS (Ubuntu)
      git:
        repo: https://github.com/Githbri/projet_grafana
        dest: /home/ubuntu/docker/projet_grafana
        force: yes
      when: ansible_os_family == "Debian"

    - name: Télécharger le projet JuiceShop sur le Githbri pour le Vagrant (CentOS)
      git:
        repo: https://github.com/Githbri/labo_pentest_juice
        dest: /home/centos/docker/lab_pentest_juice
        force: yes
      when: ansible_os_family == "RedHat"

    # Lancer les projets avec Docker Compose
    - name: Déployer le projet Grafana sur le VPS (Ubuntu)
      shell: sudo docker compose up -d
      args:
        chdir: /home/ubuntu/docker/projet_grafana
      when: ansible_os_family == "Debian"

    - name: Déployer le projet JuiceShop sur le Vagrant (CentOS)
      shell: sudo docker compose up -d
      args:
        chdir: /home/centos/docker/lab_pentest_juice
      when: ansible_os_family == "RedHat"

# Étape : Ajouter un certificat SSL avec Let's Encrypt pour sécuriser Juice-Shop
# Ce bloc est en commentaire pour indiquer comment configurer cette étape manuellement si nécessaire
# Vous pouvez le décommenter et ajuster en fonction de vos besoins.

# - name: Installer Certbot (Let's Encrypt) sur CentOS
#   yum:
#     name:
#       - epel-release
#       - certbot
#       - python3-certbot-nginx
#     state: present
#   when: ansible_os_family == "RedHat"

# - name: Générer un certificat SSL avec Certbot pour Juice-Shop
#   command: >
#     certbot --nginx -d "votre nom de domaine" --non-interactive --agree-tos
#     --register-unsafely-without-email
#   when: ansible_os_family == "RedHat"

# - name: Installer Certbot (Let's Encrypt) sur Ubuntu
#   apt:
#     name:
#       - certbot
#       - python3-certbot-nginx
#     state: present
#     update_cache: yes
#   when: ansible_os_family == "Debian"

# - name: Générer un certificat SSL avec Certbot pour Grafana
#   command: >
#     certbot --nginx -d "votre nom de domaine" --non-interactive --agree-tos
#     --register-unsafely-without-email
#   when: ansible_os_family == "Debian"

# - name: Redémarrer Nginx pour appliquer le certificat
#   service:
#     name: nginx
#     state: restarted
#   when: ansible_os_family == "Debian"

# - name: Redémarrer Nginx pour appliquer le certificat
#   service:
#     name: nginx
#     state: restarted
#   when: ansible_os_family == "RedHat"